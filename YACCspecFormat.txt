%{ /* code to insert at the beginning of the parser */
%}
/* other YACC definitions, if necessary */
%%
/* grammar and associated actions */
%%
/* auxiliary procedures */

(1) %{
(2) #include <stdio.h>
(3) %}
(4) %%
(5) command : expr '\n' { printf("The result is: %d\n",$1); }
(6)
(7) expr : expr '+' term { $$ = $1 + $3; }
(8) u term { $$ = $1; }
(9) ;
(10) term : term '*' factor { $$ = $1 * $3; }
(11) u factor { $$ = $1; }
(12) ;
(13) factor : number { $$ = $1; }
(14) u '(' expr ')' { $$ = $2; }
(15) ;
(16) number : number digit { $$ = 10 * $1 + $2; }
(17) u digit { $$ = $1; }
(18) ;
(19) digit : '0' { $$ = 0; }
(20) u '1' { $$ = 1; }
(21) u '2' { $$ = 2; }
(22) u '3' { $$ = 3; }
(23) u '4' { $$ = 4; }
(24) u '5' { $$ = 5; }
(25) u '6' { $$ = 6; }
(26) u '7' { $$ = 7; }
(27) u '8' { $$ = 8; }
(28) u '9' { $$ = 9; }
(29) ;
(30) %%
(31) main()
(32) { yyparse();
(33) return 0;
(34) }
(35) int yylex(void)
(36) { static int done = 0; /* flag to end parse */
(37) int c;
(38) if (done) return 0; /* stop parse */
(39) c = getchar();
(40) if (c == '\n') done = 1; /* next call will end parse */
(41) return c;
(42) }
(43) int yyerror(char *s)
(44) /* allows for printing error message */
(45) { printf("%s\n",s);
(46) }