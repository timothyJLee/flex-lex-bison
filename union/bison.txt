%{
#include <stdio.h>
%}
%union{
double real;
int integer;
char string[100];
}

%token <integer> INT_TOKEN
%token <real> REAL_TOKEN
%token <string> STRING_TOKEN
%token PLUS
%token MINUS
%token ENDOFLINE

%type <real> rexpr
%type <integer> iexpr
%left PLUS MINUS

%%
lines: 
     | lines line
;
line: iexpr ENDOFLINE{ printf("Result -> %d\n", $1);  } 
    | rexpr ENDOFLINE{printf("Result -> %lf\n", $1);  }
    | ENDOFLINE 
;
iexpr: INT_TOKEN
    | iexpr PLUS iexpr { $$ = $1 + $3; }
    | iexpr MINUS iexpr { $$ = $1 - $3; }
;
rexpr: REAL_TOKEN 
    | rexpr PLUS rexpr {  $$ = $1 + $3; }
    | rexpr MINUS rexpr { $$ = $1 - $3; }
    | iexpr PLUS rexpr {  $$ = (double) $1 + $3; }
    | iexpr MINUS rexpr { $$ = (double) $1 - $3; }
    | rexpr PLUS iexpr {  $$ = $1 + (double) $3; }
    | rexpr MINUS iexpr { $$ = $1 - (double) $3; }
;
    
%%
yyerror(char * str)
{
   fprintf(stderr, "%s\n", str);
}

